# Deploys all resources that are specific to the app, but not the app itself.
# - DB stack
# - Deployment Sequencer Lambda

name: 03 - Manually create the app environment

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment in which to deploy the app-specific environment resources.'
        required: true
        default: 'staging'
jobs:
  deploy-database-stack:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploy the database stack

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: NPM install
        run: npm install

      - name: Deploy database stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEPLOY_REGION }}
        run: |
          npm run database:deploy -- -c environmentName=${{ github.event.inputs.environmentName }} -c accountId=${{ secrets.AWS_ACCOUNT_ID }} -c region=${{ secrets.AWS_DEPLOY_REGION }}

  deploy-deployment-sequencer-lambda:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploy the Deployment Sequencer AWS Lambda Function

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install CDK
        run: |
          npm i -g aws-cdk
          echo "CKD version:"
          cdk version

      - name: NPM install
        run: npm i

      - name: Deploy Deployment Sequencer Lambda Function
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEPLOY_REGION }}
        run: |
          cd deployment-sequencer-lambda
          npm install
          npm run dist
          cd ..
          npm run deployment-sequencer:deploy -- -c accountId=${{ secrets.AWS_ACCOUNT_ID }} -c region=${{ secrets.AWS_DEPLOY_REGION }} -c githubToken=${{ secrets.GH_API_TOKEN }}
