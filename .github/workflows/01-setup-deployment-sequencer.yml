name: 01 - Set up deployment sequencer lambda function

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment the function will be associated to.'
        required: true
        default: 'staging'
      applicationName:
        description: 'The name of the application for which to set-up the lambda function.'
        required: true
        # Used later from the application to call the lambda function by its name
        default: 'core'

jobs:
  bootstrap-cdk-setup:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploy the Deployment Sequencer AWS Lambda Function

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Install CDK
        run: |
          echo "Node version:"
          node -v
          echo "npm version:"
          npm -v
          npm i -g aws-cdk
          echo "CKD version:"
          cdk version

      - name: NPM install
        run: npm i

      - name: Deploy Deployment Sequencer AWS Lambda Function stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEPLOY_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          cd deployment-sequencer-lambda
          npm install
          npm run dist
          cd ..
          npm run deployment-sequencer:deploy -- \
            -c environmentName=${{ github.event.inputs.environmentName }} \
            -c applicationName=${{ github.event.inputs.applicationName }} \
            -c accountId=${{ secrets.AWS_ACCOUNT_ID }} \
            -c region=${{ secrets.AWS_DEPLOY_REGION }} \
            -c githubToken=${{ secrets.GH_API_TOKEN }}
