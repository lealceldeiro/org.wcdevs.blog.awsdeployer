# It should be triggered once for each app to set up a network for.

name: 03 - Setup network

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment to be created.'
        required: true
        default: 'staging'
      applicationName:
        description: 'The name of the application for which the environment is going to be created.'
        required: false
        default: 'core'
      applicationInternalListeningPort:
        description: 'The internal (container) port used by the application to listen for requests.'
        required: false
        default: '8080'
      applicationExternalListeningPort:
        description: 'The external (internet facing) port used by the application to listen for requests. (IT MUST BE A FREE PORT)'
        required: false
        default: '80'
jobs:
  setup-network:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploy the network stack

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Install CDK
        run: |
          echo "Node version:"
          node -v
          echo "npm version:"
          npm -v
          npm i -g aws-cdk
          echo "CKD version:"
          cdk version

      - name: NPM install
        run: npm i

      - name: Deploy network stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEPLOY_REGION }}
        run: |
          npm run network:deploy -- \
            -c environmentName=${{ github.event.inputs.environmentName }} \
            -c applicationName=${{ github.event.inputs.applicationName }} \
            -c sslCertificate=${{ secrets.SSL_CERTIFICATE }} \
            -c appInternalPort=${{ github.event.inputs.applicationInternalListeningPort }} \
            -c appExternalPort=${{ github.event.inputs.applicationExternalListeningPort }} \
            -c accountId=${{ secrets.AWS_ACCOUNT_ID }} \
            -c region=${{ secrets.AWS_DEPLOY_REGION }}
